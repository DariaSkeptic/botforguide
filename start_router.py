from telegram import Update
from telegram.ext import ContextTypes
import logging
from gdrive_integration import get_guide
from arcana_calculator import calculate_arcana
from antispam import can_issue
from config import ADMIN_CHAT_ID

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")
logger = logging.getLogger(__name__)

async def cmd_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /start –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user.username} ({user.id})")
    await update.message.reply_text(f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}. –ö–∏–¥–∞–π –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì.")
    if ADMIN_CHAT_ID:
        await context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=f"üü° –°—Ç–∞—Ä—Ç —Å—Ü–µ–Ω–∞—Ä–∏—è –æ—Ç {user.username} ({user.id})")

async def on_date(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    text = update.message.text.strip()
    program = context.args[0] if context.args else "kapusta"
    
    if can_issue(user.id):
        try:
            arcana = calculate_arcana(text)
            guide_path = get_guide(program, arcana)
            if guide_path:
                with open(guide_path, 'rb') as guide_file:
                    await update.message.reply_document(document=guide_file, caption=f"{program.capitalize()}: –∞—Ä–∫–∞–Ω {arcana}. –î–µ—Ä–∂–∏ —Å–≤–æ–π –≥–∞–π–¥.")
                if ADMIN_CHAT_ID:
                    await context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=f"‚úÖ –í—ã–¥–∞–Ω –≥–∞–π–¥ {program} –∞—Ä–∫–∞–Ω {arcana} –¥–ª—è {user.username} ({user.id})")
            else:
                await update.message.reply_text("–ì–∞–π–¥ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                if ADMIN_CHAT_ID:
                    await context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=f"‚ùóÔ∏è –ì–∞–π–¥ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –¥–ª—è {program} –∞—Ä–∫–∞–Ω {arcana}, {user.username} ({user.id})")
        except Exception as e:
            await update.message.reply_text("–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –≤—ã–¥–∞—Ç—å —Ñ–∞–π–ª")
            if ADMIN_CHAT_ID:
                await context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=f"üî• –û—à–∏–±–∫–∞ –≤—ã–¥–∞—á–∏ –¥–ª—è {user.username} ({user.id}): {str(e)}")
    else:
        await update.message.reply_text("–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ")